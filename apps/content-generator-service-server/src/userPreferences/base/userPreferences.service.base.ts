/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UserPreferences as PrismaUserPreferences,
} from "@prisma/client";

export class UserPreferencesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserPreferencesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userPreferences.count(args);
  }

  async userPreferencesItems(
    args: Prisma.UserPreferencesFindManyArgs
  ): Promise<PrismaUserPreferences[]> {
    return this.prisma.userPreferences.findMany(args);
  }
  async userPreferences(
    args: Prisma.UserPreferencesFindUniqueArgs
  ): Promise<PrismaUserPreferences | null> {
    return this.prisma.userPreferences.findUnique(args);
  }
  async createUserPreferences(
    args: Prisma.UserPreferencesCreateArgs
  ): Promise<PrismaUserPreferences> {
    return this.prisma.userPreferences.create(args);
  }
  async updateUserPreferences(
    args: Prisma.UserPreferencesUpdateArgs
  ): Promise<PrismaUserPreferences> {
    return this.prisma.userPreferences.update(args);
  }
  async deleteUserPreferences(
    args: Prisma.UserPreferencesDeleteArgs
  ): Promise<PrismaUserPreferences> {
    return this.prisma.userPreferences.delete(args);
  }
}
